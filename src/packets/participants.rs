use crate::packets::header::PacketHeader;
use serde::{Deserialize, Serialize};

// Size = 58 bytes * 22 = 1276 bytes
#[derive(Debug, Serialize, Deserialize)]
pub struct ParticipantData {
    ai_controlled: u8,     // AI = 1, Human = 0
    driver_id: u8,         // Driver Id - 255 if Human
    network_id: u8,        // UID for network players
    team_id: u8,           // Team Id
    my_team: u8,           // My Team Flag - 1 = My team, 0 = False
    race_number: u8,       // Race number of the car
    nationality: u8,       // Nationality of driver
    name: String,          // Name of participant UTF-8 null-terminated
    your_telemetry: u8,    // Players UDP setting, 0 = restricted, 1 = public
    show_online_names: u8, // 0 = off, 1 = on
    platform: u8,          // 1 = Steam, 3 = PS, 4 = Xbox, 6 = Origin, 255 = Unknown
}

// Every 5 Seconds 1306 bytes
#[derive(Debug, Serialize, Deserialize)]
pub struct PacketParticipantsData {
    pub header: PacketHeader,
    num_active_cars: u8, // Number of cars in the data
    participants: Vec<ParticipantData>,
}

impl PacketParticipantsData {
    pub fn from_bytes(data: &[u8]) -> Self {
        let header = PacketHeader::from_bytes(&data[0..29]);
        let mut participants = Vec::new();
        let mut offset = 30;
        let num_participants = data[29];

        for _i in 0..num_participants {
            let participant = ParticipantData::from_bytes(&data[offset..offset + 58]);
            participants.push(participant);
            offset += 58;
        }

        PacketParticipantsData {
            header: header,
            num_active_cars: data[29],
            participants: participants,
        }
    }
}

impl ParticipantData {
    fn from_bytes(data: &[u8]) -> Self {
        let name_bytes = &data[7..55];
        let name = std::str::from_utf8(name_bytes)
            .unwrap_or_default()
            .trim_end_matches(char::from(0))
            .to_string();

        ParticipantData {
            ai_controlled: data[0],
            driver_id: data[1],
            network_id: data[2],
            team_id: data[3],
            my_team: data[4],
            race_number: data[5],
            nationality: data[6],
            name,
            your_telemetry: data[55],
            show_online_names: data[56],
            platform: data[57],
        }
    }
}

#[derive(Debug, Default, Serialize)]
pub enum Driver {
    CarlosSainz,
    DaniilKvyat,
    DanielRicciardo,
    FernandoAlonso,
    FelipeMassa,
    KimiRaikkonen,
    LewisHamilton,
    MaxVerstappen,
    NicoHulkenburg,
    KevinMagnussen,
    RomainGrosjean,
    SebastianVettel,
    SergioPerez,
    ValtteriBottas,
    EstebanOcon,
    LanceStroll,
    ArronBarnes,
    MartinGiles,
    AlexMurray,
    LucasRoth,
    IgorCorreia,
    SophieLevasseur,
    JonasSchiffer,
    AlainForest,
    JayLetourneau,
    EstoSaari,
    YasarAtiyeh,
    CallistoCalabresi,
    NaotaIzum,
    HowardClarke,
    WilhelmKaufmann,
    MarieLaursen,
    FlavioNieves,
    PeterBelousov,
    KlimekMichalski,
    SantiagoMoreno,
    BenjaminCoppens,
    NoahVisser,
    GertWaldmuller,
    JulianQuesada,
    DanielJones,
    ArtemMarkelov,
    TadasukeMakino,
    SeanGelael,
    NyckDeVries,
    JackAitken,
    GeorgeRussell,
    MaximilianGunther,
    NireiFukuzumi,
    LucaGhiotto,
    LandoNorris,
    SergioSetteCamara,
    LouisDeletraz,
    AntonioFuoco,
    CharlesLeclerc,
    PierreGasly,
    AlexanderAlbon,
    NicholasLatifi,
    DorianBoccolacci,
    NikoKari,
    RobertoMerhi,
    ArjunMaini,
    AlessioLorandi,
    RubenMeijer,
    RashidNair,
    JackTremblay,
    AntonioGiovinazzi,
    RobertKubica,
    AlainProst,
    AyrtonSenna,
    NobuharuMatsushita,
    NikitaMazepin,
    GuanyaZhou,
    MickSchumacher,
    CallumIlott,
    JuanManuelCorrea,
    JordanKing,
    MahaveerRaghunathan,
    TatianaCalderon,
    AnthoineHubert,
    GuilianoAlesi,
    RalphBoschung,
    MichaelSchumacher,
    DanTicktum,
    MarcusArmstrong,
    ChristianLundgaard,
    YukiTsunoda,
    JehanDaruvala,
    GulhermeSamaia,
    PedroPiquet,
    FelipeDrugovich,
    RobertSchwartzman,
    RoyNissany,
    MarinoSato,
    AidanJackson,
    CasperAkkerman,
    JensonButton,
    DavidCoulthard,
    NicoRosberg,
    OscarPiastri,
    LiamLawson,
    JuriVips,
    TheoPourchaire,
    RichardVerschoor,
    LirimZendeli,
    DavidBeckmann,
    GianlucaPetecof,
    MatteoNannini,
    AlessioDeledda,
    BentViscaal,
    EnzoFittipaldi,
    DevonButler,
    LukasWeber,
    MarkWebber,
    JacquesVilleneuve,
    CallieMayer,
    NoahBell,
    JakeHughes,
    FrederikVesti,
    OlliCaldwell,
    LoganSargeant,
    CemBolukbasi,
    AyumuIwasa,
    ClementNovalak,
    JackDoohan,
    AmauryCordeel,
    DennisHauger,
    CalanWilliams,
    JamieChadwick,
    KamuiKobayashi,
    PastorMaldonado,
    MikaHakkinen,
    NigelMansell,
    Player,
    #[default]
    Unknown,
}

#[derive(Debug, Default, Serialize)]
pub enum Team {
    Mercedes,
    Ferrari,
    RedBullRacing,
    Williams,
    RacingPoint,
    Renault,
    ToroRosso,
    Haas,
    McLaren,
    AlfaRomeo,
    AlphaTauri,
    Alpine,
    AstonMartin,
    McLaren1988,
    McLaren1991,
    Williams1992,
    Ferrari1995,
    Williams1996,
    McLaren1998,
    Ferrari2002,
    Ferrari2004,
    Renault2006,
    Ferrari2007,
    RedBull2010,
    Ferrari1976,
    ARTGrandPrix,
    CamposVexatecRacing,
    Carlin,
    CharouzRacingSystem,
    DAMS,
    RussianTime,
    MPMotorsport,
    Pertamina,
    McLaren1990,
    Trident,
    BWTArden,
    McLaren1976,
    Lotus1972,
    Ferrari1979,
    McLaren1982,
    Williams2003,
    Brawn2009,
    Lotus1978,
    ArtGP2019,
    Campos2019,
    Carlin2019,
    SauberJuniorCharouz2019,
    Dams2019,
    UniVirtuosi2019,
    MPMotorsport2019,
    Prema2019,
    Trident2019,
    Arden2019,
    Ferrari1990,
    McLaren2010,
    Ferrari2010,
    McLaren2008,
    F1GenericCar,
    Benetton1994,
    Benetton1995,
    Ferrari2000,
    Jordan1991,
    ArtGP2020,
    Campos2020,
    Carlin2020,
    Charouz2020,
    Dams2020,
    UniVirtuosi2020,
    MPMotorsport2020,
    Prema2020,
    Trident2020,
    BWT2020,
    Hitech2020,
    Mercedes2020,
    Ferrari2020,
    RedBull2020,
    Williams2020,
    RacingPoint2020,
    Renault2020,
    AlphaTauri2020,
    Haas2020,
    McLaren2020,
    AlfaRomeo2020,
    Prema2021,
    UniVirtuosi2021,
    Carlin2021,
    Hitech2021,
    ArtGP2021,
    MPMotorsport2021,
    Charouz2021,
    Dams2021,
    Campos2021,
    BWT2021,
    Trident2021,
    AstonMartinDB11V12,
    AstonMartinVantageF1Edition,
    AstonMartinVantageSafetyCar,
    FerrariF8Tributo,
    FerrariRoma,
    McLaren720S,
    McLarenArtura,
    MercedesAMGGTBlackSeriesSafetyCar,
    MercedesAMGGTRPro,
    F1CustomTeam,
    MercedesAMGGTBlackSeries,
    Mercedes2022,
    Ferrari2022,
    RedBullRacing2022,
    Williams2022,
    AstonMartin2022,
    Alpine2022,
    AlphaTauri2022,
    Haas2022,
    McLaren2022,
    AlfaRomeo2022,
    Konnersport2022,
    Konnersport,
    Prema2022,
    Virtuosi2022,
    Carlin2022,
    MPMotorsport2022,
    Charouz2022,
    Dams2022,
    Campos2022,
    VanAmersfoortRacing2022,
    Trident2022,
    Hitech2022,
    ArtGP2022,
    ArtGP2023,
    Campos2023,
    Carlin2023,
    Phm2023,
    Dams2023,
    Hitech2023,
    MPMotorsport2023,
    Prema2023,
    Trident2023,
    VanAmersfoortRacing2023,
    Virtuosi2023,
    MyTeam,
    F1WorldCar,
    #[default]
    Unknown,
}

#[derive(Debug, Default, Serialize)]
pub enum Nationality {
    American,
    Argentinean,
    Australian,
    Austrian,
    Azerbaijani,
    Bahraini,
    Barbadian,
    Belgian,
    Bolivian,
    Brazilian,
    British,
    Bulgarian,
    Cameroonian,
    Canadian,
    Chilean,
    Chinese,
    Colombian,
    CostaRican,
    Croatian,
    Cypriot,
    Czech,
    Danish,
    Dutch,
    Ecuadorian,
    Emirian,
    English,
    Estonian,
    Finnish,
    French,
    German,
    Ghanaian,
    Greek,
    Guatemalan,
    Honduran,
    HongKonger,
    Hungarian,
    Icelander,
    Indian,
    Indonesian,
    Irish,
    Israeli,
    Italian,
    Jamaican,
    Japanese,
    Jordanian,
    Kuwaiti,
    Latvian,
    Lebanese,
    Lithuanian,
    Luxembourger,
    Malaysian,
    Maltese,
    Mexican,
    Monegasque,
    NewZealander,
    Nicaraguan,
    NorthKorean,
    NorthernIrish,
    Norwegian,
    Omani,
    Pakistani,
    Panamanian,
    Paraguayan,
    Peruvian,
    Polish,
    Portuguese,
    Qatari,
    Romanian,
    Russian,
    Salvadoran,
    Saudi,
    Scottish,
    Serbian,
    Singaporean,
    Slovakian,
    Slovenian,
    SouthAfrican,
    SouthKorean,
    Spanish,
    Swedish,
    Swiss,
    Thai,
    Turkish,
    Ukrainian,
    Uruguayan,
    Venezuelan,
    Vietnamese,
    Welsh,
    #[default]
    Invalid,
}
